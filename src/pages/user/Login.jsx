import { useForm } from 'react-hook-form';
import useCustomAxios from '@hooks/useCustomAxios.mjs';
import { memberState } from '@recoil/user/atoms.mjs';
import { useSetRecoilState } from 'recoil';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import { useState } from 'react';
import Submit from '@components/Submit';
import styles from './auth.module.css';

function Login() {
  const [pwType, setpwType] = useState({
    type: 'password',
    visible: false,
  });

  const handlePasswordType = () => {
    setpwType(prevState => ({
      type: prevState.visible ? 'password' : 'text',
      visible: !prevState.visible,
    }));
  };

  const location = useLocation();
  const setUser = useSetRecoilState(memberState);
  const axios = useCustomAxios();
  const navigate = useNavigate();
  const {
    register,
    handleSubmit,
    formState: { errors },
    setError,
  } = useForm({
    values: {
      email: 'dragon@test.com',
      password: '11111111',
    },
  });

  const onSubmit = async formData => {
    try {
      const res = await axios.post('/users/login', formData);
      setUser({
        _id: res.data.item._id,
        name: res.data.item.name,
        profile: res.data.item.profileImage,
        token: res.data.item.token,
      });
      alert(res.data.item.name + '님 로그인 되었습니다.');
      navigate(location.state?.from ? location.state?.from : '/main');
    } catch (err) {
      if (err.response?.data.errors) {
        err.response?.data.errors.forEach(error =>
          setError(error.path, { message: error.msg }),
        );
      } else if (err.response?.data.message) {
        alert(err.response?.data.message);
      }
    }
  };

  return (
    <div className={styles.authpage}>
      <div className={styles.authpage_wrap}>
        <div className={styles.pagename}>
          <Link to="/">
            <div className={styles.logo}>
              <svg
                width="45"
                height="45"
                viewBox="0 0 89 89"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M11.125 44.7114C11.125 46.1409 12.3877 47.2812 13.9062 47.2812C15.4248 47.2812 16.6597 46.1159 16.6875 44.7114V38.7261C16.6875 37.2966 15.4248 36.1562 13.9062 36.1562C12.3571 36.1562 11.125 37.3216 11.125 38.7261V44.7114ZM38.9375 38.9375C38.9375 38.1999 39.2305 37.4924 39.7521 36.9709C40.2737 36.4493 40.9811 36.1562 41.7188 36.1562C42.4564 36.1562 43.1638 36.4493 43.6854 36.9709C44.207 37.4924 44.5 38.1999 44.5 38.9375V44.5C44.5 45.2376 44.207 45.9451 43.6854 46.4666C43.1638 46.9882 42.4564 47.2812 41.7188 47.2812C40.9811 47.2812 40.2737 46.9882 39.7521 46.4666C39.2305 45.9451 38.9375 45.2376 38.9375 44.5V38.9375Z"
                  fill="#619AE0"
                />
                <path
                  d="M23.2234 6.50813C23.3219 6.16802 23.4865 5.85065 23.7077 5.57417C23.9289 5.29768 24.2024 5.0675 24.5126 4.89677C24.8228 4.72604 25.1636 4.61811 25.5156 4.57915C25.8675 4.54019 26.2237 4.57097 26.5637 4.66972C29.192 5.43178 31.214 6.675 32.4933 8.38547C33.0932 9.17274 33.5216 10.0769 33.7511 11.0396C33.9805 12.0024 34.0059 13.0026 33.8256 13.9758C33.2026 17.3856 30.107 20.47 26.3357 20.47C23.788 20.47 21.5714 19.4632 20.0222 18.7595C19.6801 18.6066 19.3714 18.4647 19.0988 18.3535C17.5191 17.7082 16.1285 17.38 13.9341 18.2422C12.0011 18.9987 11.1194 20.9345 11.3558 24.2386C11.4448 25.4568 11.684 26.6861 11.9955 27.8264C12.1652 27.8181 12.3404 27.8125 12.5156 27.8125H14.4542C15.5529 27.8123 16.6272 28.1374 17.5413 28.747L20.3115 30.5938H27.1533C27.6702 30.594 28.1769 30.4502 28.6166 30.1785C29.0562 29.9069 29.4115 29.5181 29.6426 29.0557L36.3037 15.7363C36.9967 14.3507 38.0619 13.1854 39.3798 12.3709C40.6978 11.5565 42.2165 11.1251 43.7658 11.125H48.6719C49.9632 11.125 51.2289 11.4846 52.3273 12.1634C53.4258 12.8423 54.3135 13.8136 54.8909 14.9686C55.4684 16.1236 55.7129 17.4165 55.5969 18.7026C55.4809 19.9886 55.0091 21.217 54.2344 22.25H56.5845L59.6578 14.8519C61.2988 10.9025 65.034 8.34375 69.1391 8.34375H82.1665C82.7505 8.34375 83.1733 8.98344 82.9341 9.53969L82.3 11.125C80.9761 14.4903 77.85 16.6875 74.3818 16.6875H69.1363C68.7644 16.6968 68.4028 16.8115 68.0936 17.0183C67.7844 17.2251 67.5403 17.5155 67.3897 17.8556L65.4984 22.25H75.7056C76.5508 22.2501 77.3849 22.4429 78.1445 22.8136C78.9041 23.1843 79.5692 23.7233 80.0894 24.3895C80.6095 25.0558 80.971 25.8318 81.1463 26.6586C81.3216 27.4855 81.3062 28.3414 81.1012 29.1614L80.7619 30.5103C80.4894 31.6033 80.0611 32.6241 79.502 33.5474H82.5253C84.1384 33.5474 84.9588 35.066 84.9588 36.6791V40.3281C84.9588 46.75 80.0444 52.0233 72.7213 52.7575H81.5657C83.596 52.7575 85.2648 53.8979 85.2648 55.9282V66.0853C85.2648 76.5289 79.3101 83.2178 72.8326 83.2178H66.6777C66.2083 84.1225 65.4994 84.8809 64.6283 85.4102C63.7572 85.9394 62.7574 86.2191 61.7382 86.2188H23.8631C22.8188 86.219 21.8085 85.8477 21.013 85.1711C20.2175 84.4944 19.6888 83.5568 19.5215 82.526C19.3542 81.4952 19.5593 80.4384 20.1 79.545C20.6407 78.6516 21.4817 77.9797 22.4725 77.6497L31.7007 74.5737C32.8903 74.1777 33.9754 73.5188 34.8754 72.6458C35.7753 71.7729 36.4669 70.7083 36.8988 69.5313H19.8581C17.5688 69.531 15.3149 68.9655 13.2965 67.885C11.2782 66.8045 9.55781 65.2424 8.28813 63.3374L5.11472 58.5815C3.59177 56.2957 2.77981 53.6102 2.78125 50.8635V37.5469C2.78125 34.265 4.4055 31.3642 6.89194 29.6008C6.41839 27.9779 6.11271 26.3106 5.97969 24.6252C5.68766 20.5701 6.63885 15.3108 11.9649 13.2221C15.8587 11.6952 18.7484 12.3877 21.1347 13.3611C21.7549 13.617 22.2834 13.8506 22.7562 14.0592C24.1552 14.6794 25.0535 15.0799 26.3357 15.0799C27.1617 15.0799 28.302 14.2094 28.5217 13.0107C28.5694 12.7675 28.5635 12.5169 28.5044 12.2762C28.4453 12.0356 28.3345 11.8107 28.1796 11.6173C27.7986 11.1083 26.9336 10.388 25.0646 9.84563C24.3784 9.64667 23.7992 9.18333 23.4545 8.55748C23.1097 7.93163 23.0248 7.19449 23.2234 6.50813ZM43.7685 16.6875C43.2522 16.6878 42.7461 16.8318 42.3069 17.1034C41.8678 17.3751 41.5129 17.7636 41.2821 18.2255L34.468 31.8481H34.4513L33.7004 33.2387C33.2232 34.1216 32.5159 34.859 31.6537 35.3726C30.7914 35.8863 29.8063 36.157 28.8026 36.1563H20.3115C19.2127 36.1565 18.1385 35.8313 17.2243 35.2218L14.4542 33.375H12.5156C11.4092 33.375 10.348 33.8145 9.56567 34.5969C8.78329 35.3793 8.34375 36.4404 8.34375 37.5469V50.8663C8.34423 51.5326 8.42453 52.1965 8.58294 52.8438H36.1563L33.0385 55.9615C32.2635 56.7367 31.3434 57.3516 30.3308 57.7711C29.3181 58.1906 28.2328 58.4064 27.1367 58.4063H11.6868L12.9189 60.253C13.6805 61.3955 14.7123 62.3324 15.9228 62.9806C17.1333 63.6288 18.485 63.9682 19.8581 63.9688H38.6844C38.9292 63.9688 39.1711 63.991 39.402 64.0299L39.4993 63.9688H45.3232C46.8585 64.0856 49.5368 65.2871 47.9738 69.1447C46.3134 73.2387 43.1344 78.4758 41.0207 80.6563H61.7354L63.8325 71.2139C63.9215 70.8162 63.966 70.4129 63.966 70.0069V42.6394C63.966 41.6312 63.692 40.642 63.1733 39.7774L62.6198 38.8568C61.9542 37.7472 60.9225 36.9043 59.7023 36.4733C58.9875 36.223 58.4035 35.6056 58.4035 34.8491C58.4035 34.4581 58.5588 34.0832 58.8352 33.8067C59.1117 33.5303 59.4866 33.375 59.8775 33.375H69.9679C71.2083 33.3748 72.4131 32.96 73.3907 32.1966C74.3683 31.4331 75.0627 30.3648 75.3635 29.1614L75.7001 27.8125H42.5142C42.3957 27.8123 42.2793 27.7818 42.1759 27.7239C42.0726 27.666 41.9857 27.5827 41.9236 27.4819C41.8615 27.381 41.8261 27.266 41.821 27.1476C41.8158 27.0293 41.8409 26.9116 41.894 26.8057L44.4611 21.6715C44.7922 21.0094 45.3012 20.4527 45.9309 20.0636C46.5607 19.6746 47.2864 19.4686 48.0266 19.4688H48.6719C49.0407 19.4688 49.3944 19.3222 49.6552 19.0615C49.916 18.8007 50.0625 18.4469 50.0625 18.0781C50.0625 17.7093 49.916 17.3556 49.6552 17.0948C49.3944 16.834 49.0407 16.6875 48.6719 16.6875H43.7658H43.7685Z"
                  fill="#619AE0"
                />
              </svg>
            </div>
          </Link>
          <h2>로그인용</h2>
        </div>

        <form onSubmit={handleSubmit(onSubmit)}>
          <div className={styles.auth_input}>
            <label className={styles.signuplabel} htmlFor="email">
              아이디
            </label>
            <input
              type="email"
              id="email"
              placeholder="이메일을 입력하세요"
              {...register('email', {
                required: '이메일은 필수로 입력해주세요.',
                pattern: {
                  value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,
                  message: '이메일 형식이 아닙니다.',
                },
              })}
            />
            {errors.email && <p>{errors.email.message}</p>}
          </div>
          <div className={styles.auth_input}>
            <label className={styles.signuplabel} htmlFor="password">
              비밀번호
            </label>
            <div className={styles.pwvisibility}>
              <span onClick={handlePasswordType}>
                {pwType.visible ? (
                  <svg
                    className={styles.eyeIcon}
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M11.955 23.91C10.3219 23.91 8.7826 23.5975 7.33709 22.9724C5.89936 22.3473 4.62963 21.4838 3.5279 20.3821C2.42616 19.2804 1.56275 18.0106 0.93765 16.5729C0.31255 15.1274 0 13.5881 0 11.955C0 10.3219 0.31255 8.7865 0.93765 7.34881C1.56275 5.90327 2.42226 4.62963 3.51618 3.5279C4.61791 2.42616 5.88764 1.56275 7.32537 0.93765C8.7709 0.31255 10.3102 0 11.9433 0C13.5763 0 15.1157 0.31255 16.5612 0.93765C18.0067 1.56275 19.2804 2.42616 20.3821 3.5279C21.4838 4.62963 22.3473 5.90327 22.9724 7.34881C23.5975 8.7865 23.91 10.3219 23.91 11.955C23.91 13.5881 23.5975 15.1274 22.9724 16.5729C22.3473 18.0106 21.4838 19.2804 20.3821 20.3821C19.2804 21.4838 18.0067 22.3473 16.5612 22.9724C15.1235 23.5975 13.5881 23.91 11.955 23.91ZM14.7328 16.8308L13.1271 15.2133C12.9473 15.2836 12.7559 15.3383 12.5528 15.3774C12.3574 15.4165 12.1582 15.436 11.955 15.436C11.3065 15.436 10.7165 15.2797 10.1852 14.9672C9.6617 14.6468 9.2436 14.2249 8.9311 13.7014C8.6185 13.1778 8.4623 12.5996 8.4623 11.9667C8.4623 11.5448 8.5365 11.1502 8.685 10.7829L6.376 8.4623C5.77434 8.8842 5.25864 9.3218 4.82888 9.775C4.39913 10.2204 4.06704 10.6384 3.83263 11.0291C3.60603 11.4198 3.49274 11.7323 3.49274 11.9667C3.49274 12.2168 3.62557 12.5606 3.89124 12.9981C4.16472 13.4279 4.5515 13.8889 5.05157 14.3812C5.55165 14.8656 6.1494 15.3305 6.84482 15.7759C7.54025 16.2135 8.3177 16.5729 9.1772 16.8542C10.0367 17.1277 10.9627 17.2644 11.955 17.2644C12.4473 17.2644 12.9278 17.2254 13.3966 17.1472C13.8655 17.0613 14.3108 16.9558 14.7328 16.8308ZM11.6854 13.7717L10.1266 12.2246C10.111 12.6231 10.2555 12.9825 10.5603 13.3029C10.8728 13.6232 11.2479 13.7795 11.6854 13.7717ZM15.2133 13.1388L17.534 15.4712C18.1278 15.0492 18.6396 14.6156 19.0694 14.1702C19.4992 13.717 19.8273 13.2951 20.0539 12.9044C20.2883 12.5137 20.4055 12.2011 20.4055 11.9667C20.4055 11.7167 20.2727 11.3768 20.007 10.947C19.7414 10.5173 19.3585 10.0563 18.8584 9.564C18.3662 9.0717 17.7723 8.6068 17.0769 8.1693C16.3815 7.73168 15.6001 7.37225 14.7328 7.09096C13.8733 6.80966 12.9473 6.66901 11.955 6.66901C11.4627 6.66901 10.9822 6.70808 10.5134 6.78622C10.0524 6.86436 9.6109 6.96984 9.1889 7.10268L10.7829 8.7084C10.9627 8.6381 11.1502 8.5873 11.3455 8.556C11.5487 8.517 11.7518 8.4974 11.955 8.4974C12.5957 8.4974 13.1778 8.6537 13.7014 8.9663C14.2249 9.271 14.6429 9.689 14.9555 10.2204C15.268 10.7439 15.4243 11.326 15.4243 11.9667C15.4243 12.373 15.354 12.7637 15.2133 13.1388ZM12.2246 10.15L13.76 11.6737C13.76 11.2752 13.6076 10.9236 13.3029 10.6189C13.0059 10.3063 12.6465 10.15 12.2246 10.15ZM17.6278 18.4365C17.7372 18.5303 17.87 18.581 18.0263 18.5889C18.1825 18.5889 18.3115 18.5381 18.413 18.4365C18.5224 18.3193 18.5771 18.1864 18.5771 18.038C18.5771 17.8895 18.5224 17.7606 18.413 17.6512L6.24707 5.47352C6.13768 5.36412 6.00485 5.30943 5.84857 5.30943C5.70011 5.30943 5.56728 5.36412 5.45007 5.47352C5.3485 5.58291 5.29771 5.71574 5.29771 5.87201C5.29771 6.02048 5.3485 6.1494 5.45007 6.25879L17.6278 18.4365Z"
                      fill="#619ae0"
                    />
                  </svg>
                ) : (
                  <svg
                    className={styles.eyeIcon}
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.041 23.981C18.5801 23.981 23.9941 18.5669 23.9941 12.0278C23.9941 5.50049 18.5684 0.074707 12.0293 0.074707C5.50195 0.074707 0.0878906 5.50049 0.0878906 12.0278C0.0878906 18.5669 5.51368 23.981 12.041 23.981Z"
                      fill="#619ae0"
                    />
                    <path
                      d="M12.041 16.9849C7.43555 16.9849 4.14258 13.2114 4.14258 12.0396C4.14258 10.856 7.40039 7.09424 12.041 7.09424C16.6817 7.09424 19.9277 10.856 19.9277 12.0396C19.9277 13.2114 16.6934 16.9849 12.041 16.9849ZM12.041 15.2739C13.834 15.2739 15.2871 13.7974 15.2871 12.0396C15.2871 10.2349 13.834 8.8052 12.041 8.8052C10.2363 8.8052 8.78316 10.2349 8.79496 12.0396C8.79496 13.7974 10.2363 15.2739 12.041 15.2739ZM12.0527 13.4692C11.2793 13.4692 10.6113 12.7896 10.6113 12.0396C10.6113 11.2778 11.2793 10.6099 12.0527 10.6099C12.8145 10.6099 13.4707 11.2778 13.4707 12.0396C13.4707 12.7896 12.8145 13.4692 12.0527 13.4692Z"
                      fill="white"
                    />
                  </svg>
                )}
              </span>
              <input
                type={pwType.type}
                id="password"
                placeholder="비밀번호를 입력하세요"
                {...register('password', {
                  required: '비밀번호를 입력하세요.',
                })}
              />
              {errors.password && <p>{errors.password.message}</p>}
            </div>
          </div>
          <div className={styles.btn_auth}>
            <Submit>로그인</Submit>
            <Link to="/users/signup">회원가입</Link>
          </div>
        </form>
      </div>
    </div>
  );
}

export default Login;
