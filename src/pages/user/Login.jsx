import { useForm } from 'react-hook-form';
import useCustomAxios from '@hooks/useCustomAxios.mjs';
import { memberState } from '@recoil/user/atoms.mjs';
import { useSetRecoilState } from 'recoil';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import { useState } from 'react';
import Submit from '@components/Submit';
import styles from './login.module.css'; // CSS 모듈 import

function Login() {
  const [pwType, setpwType] = useState({
    type: 'password',
    visible: false,
  });

  const handlePasswordType = () => {
    setpwType(prevState => ({
      type: prevState.visible ? 'password' : 'text',
      visible: !prevState.visible,
    }));
  };

  const location = useLocation();
  const setUser = useSetRecoilState(memberState);
  const axios = useCustomAxios();
  const navigate = useNavigate();
  const {
    register,
    handleSubmit,
    formState: { errors },
    setError,
  } = useForm({
    values: {
      email: 'dragon@test.com',
      password: '11111111',
    },
  });

  const onSubmit = async formData => {
    try {
      const res = await axios.post('/users/login', formData);
      setUser({
        _id: res.data.item._id,
        name: res.data.item.name,
        profile: res.data.item.profileImage,
        token: res.data.item.token,
      });
      alert(res.data.item.name + '님 로그인 되었습니다.');
      navigate(location.state?.from ? location.state?.from : '/main');
    } catch (err) {
      if (err.response?.data.errors) {
        err.response?.data.errors.forEach(error =>
          setError(error.path, { message: error.msg }),
        );
      } else if (err.response?.data.message) {
        alert(err.response?.data.message);
      }
    }
  };

  return (
    <div className={styles.loginpage}>
      <div className={styles['loginpage-container']}>
        <div className={styles.pagename}>
          <Link to="/">
            <div className={styles.logo}>
              <svg
                width="45"
                height="45"
                viewBox="0 0 89 89"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M11.125 44.7114C11.125 46.1409 12.3877 47.2812 13.9062 47.2812C15.4248 47.2812 16.6597 46.1159 16.6875 44.7114V38.7261C16.6875 37.2966 15.4248 36.1562 13.9062 36.1562C12.3571 36.1562 11.125 37.3216 11.125 38.7261V44.7114ZM38.9375 38.9375C38.9375 38.1999 39.2305 37.4924 39.7521 36.9709C40.2737 36.4493 40.9811 36.1562 41.7188 36.1562C42.4564 36.1562 43.1638 36.4493 43.6854 36.9709C44.207 37.4924 44.5 38.1999 44.5 38.9375V44.5C44.5 45.2376 44.207 45.9451 43.6854 46.4666C43.1638 46.9882 42.4564 47.2812 41.7188 47.2812C40.9811 47.2812 40.2737 46.9882 39.7521 46.4666C39.2305 45.9451 38.9375 45.2376 38.9375 44.5V38.9375Z"
                  fill="#619AE0"
                />
                <path
                  d="M23.2234 6.50813C23.3219 6.16802 23.4865 5.85065 23.7077 5.57417C23.9289 5.29768 24.2024 5.0675 24.5126 4.89677C24.8228 4.72604 25.1636 4.61811 25.5156 4.57915C25.8675 4.54019 26.2237 4.57097 26.5637 4.66972C29.192 5.43178 31.214 6.675 32.4933 8.38547C33.0932 9.17274 33.5216 10.0769 33.7511 11.0396C33.9805 12.0024 34.0059 13.0026 33.8256 13.9758C33.2026 17.3856 30.107 20.47 26.3357 20.47C23.788 20.47 21.5714 19.4632 20.0222 18.7595C19.6801 18.6066 19.3714 18.4647 19.0988 18.3535C17.5191 17.7082 16.1285 17.38 13.9341 18.2422C12.0011 18.9987 11.1194 20.9345 11.3558 24.2386C11.4448 25.4568 11.684 26.6861 11.9955 27.8264C12.1652 27.8181 12.3404 27.8125 12.5156 27.8125H14.4542C15.5529 27.8123 16.6272 28.1374 17.5413 28.747L20.3115 30.5938H27.1533C27.6702 30.594 28.1769 30.4502 28.6166 30.1785C29.0562 29.9069 29.4115 29.5181 29.6426 29.0557L36.3037 15.7363C36.9967 14.3507 38.0619 13.1854 39.3798 12.3709C40.6978 11.5565 42.2165 11.1251 43.7658 11.125H48.6719C49.9632 11.125 51.2289 11.4846 52.3273 12.1634C53.4258 12.8423 54.3135 13.8136 54.8909 14.9686C55.4684 16.1236 55.7129 17.4165 55.5969 18.7026C55.4809 19.9886 55.0091 21.217 54.2344 22.25H56.5845L59.6578 14.8519C61.2988 10.9025 65.034 8.34375 69.1391 8.34375H82.1665C82.7505 8.34375 83.1733 8.98344 82.9341 9.53969L82.3 11.125C80.9761 14.4903 77.85 16.6875 74.3818 16.6875H69.1363C68.7644 16.6968 68.4028 16.8115 68.0936 17.0183C67.7844 17.2251 67.5403 17.5155 67.3897 17.8556L65.4984 22.25H75.7056C76.5508 22.2501 77.3849 22.4429 78.1445 22.8136C78.9041 23.1843 79.5692 23.7233 80.0894 24.3895C80.6095 25.0558 80.971 25.8318 81.1463 26.6586C81.3216 27.4855 81.3062 28.3414 81.1012 29.1614L80.7619 30.5103C80.4894 31.6033 80.0611 32.6241 79.502 33.5474H82.5253C84.1384 33.5474 84.9588 35.066 84.9588 36.6791V40.3281C84.9588 46.75 80.0444 52.0233 72.7213 52.7575H81.5657C83.596 52.7575 85.2648 53.8979 85.2648 55.9282V66.0853C85.2648 76.5289 79.3101 83.2178 72.8326 83.2178H66.6777C66.2083 84.1225 65.4994 84.8809 64.6283 85.4102C63.7572 85.9394 62.7574 86.2191 61.7382 86.2188H23.8631C22.8188 86.219 21.8085 85.8477 21.013 85.1711C20.2175 84.4944 19.6888 83.5568 19.5215 82.526C19.3542 81.4952 19.5593 80.4384 20.1 79.545C20.6407 78.6516 21.4817 77.9797 22.4725 77.6497L31.7007 74.5737C32.8903 74.1777 33.9754 73.5188 34.8754 72.6458C35.7753 71.7729 36.4669 70.7083 36.8988 69.5313H19.8581C17.5688 69.531 15.3149 68.9655 13.2965 67.885C11.2782 66.8045 9.55781 65.2424 8.28813 63.3374L5.11472 58.5815C3.59177 56.2957 2.77981 53.6102 2.78125 50.8635V37.5469C2.78125 34.265 4.4055 31.3642 6.89194 29.6008C6.41839 27.9779 6.11271 26.3106 5.97969 24.6252C5.68766 20.5701 6.63885 15.3108 11.9649 13.2221C15.8587 11.6952 18.7484 12.3877 21.1347 13.3611C21.7549 13.617 22.2834 13.8506 22.7562 14.0592C24.1552 14.6794 25.0535 15.0799 26.3357 15.0799C27.1617 15.0799 28.302 14.2094 28.5217 13.0107C28.5694 12.7675 28.5635 12.5169 28.5044 12.2762C28.4453 12.0356 28.3345 11.8107 28.1796 11.6173C27.7986 11.1083 26.9336 10.388 25.0646 9.84563C24.3784 9.64667 23.7992 9.18333 23.4545 8.55748C23.1097 7.93163 23.0248 7.19449 23.2234 6.50813ZM43.7685 16.6875C43.2522 16.6878 42.7461 16.8318 42.3069 17.1034C41.8678 17.3751 41.5129 17.7636 41.2821 18.2255L34.468 31.8481H34.4513L33.7004 33.2387C33.2232 34.1216 32.5159 34.859 31.6537 35.3726C30.7914 35.8863 29.8063 36.157 28.8026 36.1563H20.3115C19.2127 36.1565 18.1385 35.8313 17.2243 35.2218L14.4542 33.375H12.5156C11.4092 33.375 10.348 33.8145 9.56567 34.5969C8.78329 35.3793 8.34375 36.4404 8.34375 37.5469V50.8663C8.34423 51.5326 8.42453 52.1965 8.58294 52.8438H36.1563L33.0385 55.9615C32.2635 56.7367 31.3434 57.3516 30.3308 57.7711C29.3181 58.1906 28.2328 58.4064 27.1367 58.4063H11.6868L12.9189 60.253C13.6805 61.3955 14.7123 62.3324 15.9228 62.9806C17.1333 63.6288 18.485 63.9682 19.8581 63.9688H38.6844C38.9292 63.9688 39.1711 63.991 39.402 64.0299L39.4993 63.9688H45.3232C46.8585 64.0856 49.5368 65.2871 47.9738 69.1447C46.3134 73.2387 43.1344 78.4758 41.0207 80.6563H61.7354L63.8325 71.2139C63.9215 70.8162 63.966 70.4129 63.966 70.0069V42.6394C63.966 41.6312 63.692 40.642 63.1733 39.7774L62.6198 38.8568C61.9542 37.7472 60.9225 36.9043 59.7023 36.4733C58.9875 36.223 58.4035 35.6056 58.4035 34.8491C58.4035 34.4581 58.5588 34.0832 58.8352 33.8067C59.1117 33.5303 59.4866 33.375 59.8775 33.375H69.9679C71.2083 33.3748 72.4131 32.96 73.3907 32.1966C74.3683 31.4331 75.0627 30.3648 75.3635 29.1614L75.7001 27.8125H42.5142C42.3957 27.8123 42.2793 27.7818 42.1759 27.7239C42.0726 27.666 41.9857 27.5827 41.9236 27.4819C41.8615 27.381 41.8261 27.266 41.821 27.1476C41.8158 27.0293 41.8409 26.9116 41.894 26.8057L44.4611 21.6715C44.7922 21.0094 45.3012 20.4527 45.9309 20.0636C46.5607 19.6746 47.2864 19.4686 48.0266 19.4688H48.6719C49.0407 19.4688 49.3944 19.3222 49.6552 19.0615C49.916 18.8007 50.0625 18.4469 50.0625 18.0781C50.0625 17.7093 49.916 17.3556 49.6552 17.0948C49.3944 16.834 49.0407 16.6875 48.6719 16.6875H43.7658H43.7685Z"
                  fill="#619AE0"
                />
              </svg>
            </div>
          </Link>
          <h2>로그인용</h2>
        </div>

        <form onSubmit={handleSubmit(onSubmit)}>
          <div className={styles.idpw}>
            <label htmlFor="email">아이디</label>
            <input
              type="email"
              id="email"
              placeholder="이메일을 입력하세요"
              {...register('email', {
                required: '이메일은 필수로 입력해주세요.',
                pattern: {
                  value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,
                  message: '이메일 형식이 아닙니다.',
                },
              })}
            />
            {errors.email && <p>{errors.email.message}</p>}
          </div>
          <div className={styles.idpw}>
            <label htmlFor="password">비밀번호</label>
            <div className={styles.pwvisibility}>
              <span onClick={handlePasswordType}>
                {pwType.visible ? (
                  <div className={styles.eyeIcon}>
                    <svg
                      width="25"
                      height="25"
                      viewBox="0 0 29 29"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        transform="translate(1 0)"
                        d="M13.955 25.91C12.3219 25.91 10.7826 25.5975 9.33709 24.9724C7.89936 24.3473 6.62963 23.4838 5.5279 22.3821C4.42616 21.2804 3.56275 20.0106 2.93765 18.5729C2.31255 17.1274 2 15.5881 2 13.955C2 12.3219 2.31255 10.7865 2.93765 9.34881C3.56275 7.90327 4.42226 6.62963 5.51618 5.5279C6.61791 4.42616 7.88764 3.56275 9.32537 2.93765C10.7709 2.31255 12.3102 2 13.9433 2C15.5763 2 17.1157 2.31255 18.5612 2.93765C20.0067 3.56275 21.2804 4.42616 22.3821 5.5279C23.4838 6.62963 24.3473 7.90327 24.9724 9.34881C25.5975 10.7865 25.91 12.3219 25.91 13.955C25.91 15.5881 25.5975 17.1274 24.9724 18.5729C24.3473 20.0106 23.4838 21.2804 22.3821 22.3821C21.2804 23.4838 20.0067 24.3473 18.5612 24.9724C17.1235 25.5975 15.5881 25.91 13.955 25.91ZM16.7328 18.8308L15.1271 17.2133C14.9473 17.2836 14.7559 17.3383 14.5528 17.3774C14.3574 17.4165 14.1582 17.436 13.955 17.436C13.3065 17.436 12.7165 17.2797 12.1852 16.9672C11.6617 16.6468 11.2436 16.2249 10.9311 15.7014C10.6185 15.1778 10.4623 14.5996 10.4623 13.9667C10.4623 13.5448 10.5365 13.1502 10.685 12.7829L8.376 10.4623C7.77434 10.8842 7.25864 11.3218 6.82888 11.775C6.39913 12.2204 6.06704 12.6384 5.83263 13.0291C5.60603 13.4198 5.49274 13.7323 5.49274 13.9667C5.49274 14.2168 5.62557 14.5606 5.89124 14.9981C6.16472 15.4279 6.5515 15.8889 7.05157 16.3812C7.55165 16.8656 8.1494 17.3305 8.84482 17.7759C9.54025 18.2135 10.3177 18.5729 11.1772 18.8542C12.0367 19.1277 12.9627 19.2644 13.955 19.2644C14.4473 19.2644 14.9278 19.2254 15.3966 19.1472C15.8655 19.0613 16.3108 18.9558 16.7328 18.8308ZM13.6854 15.7717L12.1266 14.2246C12.111 14.6231 12.2555 14.9825 12.5603 15.3029C12.8728 15.6232 13.2479 15.7795 13.6854 15.7717ZM17.2133 15.1388L19.534 17.4712C20.1278 17.0492 20.6396 16.6156 21.0694 16.1702C21.4992 15.717 21.8273 15.2951 22.0539 14.9044C22.2883 14.5137 22.4055 14.2011 22.4055 13.9667C22.4055 13.7167 22.2727 13.3768 22.007 12.947C21.7414 12.5173 21.3585 12.0563 20.8584 11.564C20.3662 11.0717 19.7723 10.6068 19.0769 10.1693C18.3815 9.73168 17.6001 9.37225 16.7328 9.09096C15.8733 8.80966 14.9473 8.66901 13.955 8.66901C13.4627 8.66901 12.9822 8.70808 12.5134 8.78622C12.0524 8.86436 11.6109 8.96984 11.1889 9.10268L12.7829 10.7084C12.9627 10.6381 13.1502 10.5873 13.3455 10.556C13.5487 10.517 13.7518 10.4974 13.955 10.4974C14.5957 10.4974 15.1778 10.6537 15.7014 10.9663C16.2249 11.271 16.6429 11.689 16.9555 12.2204C17.268 12.7439 17.4243 13.326 17.4243 13.9667C17.4243 14.373 17.354 14.7637 17.2133 15.1388ZM14.2246 12.15L15.76 13.6737C15.76 13.2752 15.6076 12.9236 15.3029 12.6189C15.0059 12.3063 14.6465 12.15 14.2246 12.15ZM19.6278 20.4365C19.7372 20.5303 19.87 20.581 20.0263 20.5889C20.1825 20.5889 20.3115 20.5381 20.413 20.4365C20.5224 20.3193 20.5771 20.1864 20.5771 20.038C20.5771 19.8895 20.5224 19.7606 20.413 19.6512L8.24707 7.47352C8.13768 7.36412 8.00485 7.30943 7.84857 7.30943C7.70011 7.30943 7.56728 7.36412 7.45007 7.47352C7.3485 7.58291 7.29771 7.71574 7.29771 7.87201C7.29771 8.02048 7.3485 8.1494 7.45007 8.25879L19.6278 20.4365Z"
                        fill="#619ae0"
                      />
                    </svg>
                  </div>
                ) : (
                  <div className={styles.eyeIcon}>
                    <svg
                      width="25"
                      height="25"
                      viewBox="0 0 29 29"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g
                        clipPath="url(#clip0_201_93477)"
                        transform="translate(1 0)"
                      >
                        <path
                          d="M14.0412 25.981C20.5803 25.981 25.9943 20.5669 25.9943 14.0278C25.9943 7.50049 20.5686 2.07471 14.0295 2.07471C7.50219 2.07471 2.08813 7.50049 2.08813 14.0278C2.08813 20.5669 7.51392 25.981 14.0412 25.981Z"
                          fill="#619ae0"
                        />
                        <path
                          d="M14.0412 18.9849C9.43579 18.9849 6.14282 15.2114 6.14282 14.0396C6.14282 12.856 9.40063 9.09424 14.0412 9.09424C18.6819 9.09424 21.9279 12.856 21.9279 14.0396C21.9279 15.2114 18.6936 18.9849 14.0412 18.9849ZM14.0412 17.2739C15.8342 17.2739 17.2873 15.7974 17.2873 14.0396C17.2873 12.2349 15.8342 10.8052 14.0412 10.8052C12.2365 10.8052 10.7834 12.2349 10.7952 14.0396C10.7952 15.7974 12.2365 17.2739 14.0412 17.2739ZM14.0529 15.4692C13.2795 15.4692 12.6115 14.7896 12.6115 14.0396C12.6115 13.2778 13.2795 12.6099 14.0529 12.6099C14.8147 12.6099 15.4709 13.2778 15.4709 14.0396C15.4709 14.7896 14.8147 15.4692 14.0529 15.4692Z"
                          fill="white"
                        />
                      </g>
                      <defs>
                        <clipPath id="clip0_201_93477">
                          <rect
                            width="23.9062"
                            height="23.918"
                            fill="white"
                            transform="translate(2.08813 2.06299)"
                          />
                        </clipPath>
                      </defs>
                    </svg>
                  </div>
                )}
              </span>
              <input
                type={pwType.type}
                id="password"
                placeholder="비밀번호를 입력하세요"
                {...register('password', {
                  required: '비밀번호를 입력하세요.',
                })}
              />
              {errors.password && <p>{errors.password.message}</p>}
            </div>
          </div>
          <div className={styles['login-buttons']}>
            <Submit>로그인</Submit>
            <Link to="/users/signup">회원가입</Link>
          </div>
        </form>
      </div>
    </div>
  );
}

export default Login;
